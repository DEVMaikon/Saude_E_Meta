name: CI/CD - Saude Ã© Meta

on:
  push:
    branches:
      - staging
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/saudeemeta

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test || echo "No tests or tests failed (check logs)"

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy-staging:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Deploy to staging via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          port: ${{ secrets.STAGING_SSH_PORT }}
          script: |
            cd /home/${{ secrets.STAGING_USER }}/saudeemeta-deploy || mkdir -p /home/${{ secrets.STAGING_USER }}/saudeemeta-deploy
            cat > docker-compose.staging.yml <<'EOF_REMOTE'
            version: "3.9"
            services:
              backend:
                image: ${{ env.IMAGE_NAME }}:latest
                restart: unless-stopped
                ports:
                  - "4100:4000"
                environment:
                  - PORT=4000
                  - MONGO_URI=${{ secrets.STAGING_MONGO_URI }}
                  - JWT_SECRET=${{ secrets.STAGING_JWT_SECRET }}
            EOF_REMOTE
            docker --version || (curl -fsSL https://get.docker.com | sh)
            docker pull ${{ env.IMAGE_NAME }}:latest || true
            docker-compose -f docker-compose.staging.yml up -d --remove-orphans

  deploy-production:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to production via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: ${{ secrets.PROD_SSH_PORT }}
          script: |
            cd /home/${{ secrets.PROD_USER }}/saudeemeta-deploy || mkdir -p /home/${{ secrets.PROD_USER }}/saudeemeta-deploy
            cat > docker-compose.prod.yml <<'EOF_REMOTE'
            version: "3.9"
            services:
              backend:
                image: ${{ env.IMAGE_NAME }}:latest
                restart: unless-stopped
                ports:
                  - "4000:4000"
                environment:
                  - PORT=4000
                  - MONGO_URI=${{ secrets.PROD_MONGO_URI }}
                  - JWT_SECRET=${{ secrets.PROD_JWT_SECRET }}
            EOF_REMOTE
            docker --version || (curl -fsSL https://get.docker.com | sh)
            docker pull ${{ env.IMAGE_NAME }}:latest || true
            docker-compose -f docker-compose.prod.yml up -d --remove-orphans
